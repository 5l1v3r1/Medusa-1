{"remainingRequest":"/Users/zhujunyi/Downloads/Medusa/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhujunyi/Downloads/Medusa/src/views/addin/plug_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhujunyi/Downloads/Medusa/src/views/addin/plug_list.vue","mtime":1586605426137},{"path":"/Users/zhujunyi/Downloads/Medusa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhujunyi/Downloads/Medusa/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhujunyi/Downloads/Medusa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhujunyi/Downloads/Medusa/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["plug_list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"plug_list.vue","sourceRoot":"src/views/addin","sourcesContent":[" <template>\n   <div class=\"app-container\">\n     <div class=\"filter-container\">\n       资产搜索：\n       <el-input v-model=\"listQuery.title\" placeholder=\"请输入\" style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n       <el-select v-model=\"listQuery.importance\" placeholder=\"星级\" clearable style=\"width: 90px\" class=\"filter-item\">\n         <el-option v-for=\"item in importanceOptions\" :key=\"item\" :label=\"item\" :value=\"item\" />\n       </el-select>\n       <el-select v-model=\"listQuery.type\" placeholder=\"类型\" clearable class=\"filter-item\" style=\"width: 130px\">\n         <el-option v-for=\"item in calendarTypeOptions\" :key=\"item.key\" :label=\"item.display_name\" :value=\"item.key\" />\n       </el-select>\n       <el-select v-model=\"listQuery.sort\" style=\"width: 140px\" class=\"filter-item\" @change=\"handleFilter\">\n         <el-option v-for=\"item in sortOptions\" :key=\"item.key\" :label=\"item.label\" :value=\"item.key\" />\n       </el-select>\n       <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">\n         搜索\n       </el-button>\n       <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleCreate\">\n         添加\n       </el-button>\n       <el-button v-waves :loading=\"downloadLoading\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-download\" @click=\"handleDownload\">\n         导出\n       </el-button>\n     </div>\n\n     <el-table\n       :key=\"tableKey\"\n       v-loading=\"listLoading\"\n       :data=\"list\"\n       border\n       fit\n       highlight-current-row\n       style=\"width: 100%;\"\n       @sort-change=\"sortChange\"\n     >\n       <el-table-column label=\"ID\" prop=\"id\" sortable=\"custom\" align=\"center\" width=\"80\" :class-name=\"getSortClass('id')\">\n         <template slot-scope=\"{row}\">\n           <span>{{ row.id }}</span>\n         </template>\n       </el-table-column>\n       <el-table-column label=\"日期\" width=\"150px\" align=\"center\">\n         <template slot-scope=\"{row}\">\n           <span>{{ row.timestamp | parseTime('{y}-{m}-{d} {h}:{i}') }}</span>\n         </template>\n       </el-table-column>\n       <el-table-column label=\"我的资产\" min-width=\"150px\">\n         <template slot-scope=\"{row}\">\n           <span class=\"link-type\" @click=\"handleUpdate(row)\">{{ row.title }}</span>\n           <el-tag>{{ row.type | typeFilter }}</el-tag>\n         </template>\n       </el-table-column>\n       <el-table-column label=\"类型\" width=\"80px\">\n         <template slot-scope=\"{row}\">\n           <svg-icon v-for=\"n in + row.importance\" :key=\"n\" icon-class=\"star\" class=\"meta-item__icon\" />\n         </template>\n       </el-table-column>\n       <el-table-column label=\"状态\" class-name=\"status-col\" width=\"100\">\n         <template slot-scope=\"{row}\">\n           <el-tag :type=\"row.status | statusFilter\">\n             {{ row.status }}\n           </el-tag>\n         </template>\n       </el-table-column>\n       <el-table-column label=\"Actions\" align=\"center\" width=\"230\" class-name=\"small-padding fixed-width\">\n         <template slot-scope=\"{row,$index}\">\n           <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(row)\">\n             编辑\n           </el-button>\n           <el-button v-if=\"row.status!='published'\" size=\"mini\" type=\"success\" @click=\"handleModifyStatus(row,'published')\">\n             完成\n           </el-button>\n           <el-button v-if=\"row.status!='draft'\" size=\"mini\" @click=\"handleModifyStatus(row,'draft')\">\n             草稿\n           </el-button>\n           <el-button v-if=\"row.status!='deleted'\" size=\"mini\" type=\"danger\" @click=\"handleDelete(row,$index)\">\n             删除\n           </el-button>\n         </template>\n       </el-table-column>\n     </el-table>\n\n     <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n\n     <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n       <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"70px\" style=\"width: 400px; margin-left:50px;\">\n         <el-form-item label=\"类型\" prop=\"type\">\n           <el-select v-model=\"temp.type\" class=\"filter-item\" placeholder=\"请选择\">\n             <el-option v-for=\"item in calendarTypeOptions\" :key=\"item.key\" :label=\"item.display_name\" :value=\"item.key\" />\n           </el-select>\n         </el-form-item>\n         <el-form-item label=\"日期\" prop=\"timestamp\">\n           <el-date-picker v-model=\"temp.timestamp\" type=\"datetime\" placeholder=\"请填写日期\" />\n         </el-form-item>\n         <el-form-item label=\"标题\" prop=\"title\">\n           <el-input v-model=\"temp.title\" />\n         </el-form-item>\n         <el-form-item label=\"状态\">\n           <el-select v-model=\"temp.status\" class=\"filter-item\" placeholder=\"请选择\">\n             <el-option v-for=\"item in statusOptions\" :key=\"item\" :label=\"item\" :value=\"item\" />\n           </el-select>\n         </el-form-item>\n         <el-form-item label=\"星级\">\n           <el-rate v-model=\"temp.importance\" :colors=\"['#99A9BF', '#F7BA2A', '#FF9900']\" :max=\"3\" style=\"margin-top:8px;\" />\n         </el-form-item>\n         <el-form-item label=\"标记\">\n           <el-input v-model=\"temp.remark\" :autosize=\"{ minRows: 2, maxRows: 4}\" type=\"textarea\" placeholder=\"请输入\" />\n         </el-form-item>\n       </el-form>\n       <div slot=\"footer\" class=\"dialog-footer\">\n         <el-button @click=\"dialogFormVisible = false\">\n           取消\n         </el-button>\n         <el-button type=\"primary\" @click=\"dialogStatus==='create'?createData():updateData()\">\n           确认\n         </el-button>\n       </div>\n     </el-dialog>\n\n     <el-dialog :visible.sync=\"dialogPvVisible\" title=\"Reading statistics\">\n       <el-table :data=\"pvData\" border fit highlight-current-row style=\"width: 100%\">\n         <el-table-column prop=\"key\" label=\"Channel\" />\n         <el-table-column prop=\"pv\" label=\"Pv\" />\n       </el-table>\n       <span slot=\"footer\" class=\"dialog-footer\">\n         <el-button type=\"primary\" @click=\"dialogPvVisible = false\">确认</el-button>\n       </span>\n     </el-dialog>\n   </div>\n </template>\n\n <script>\n import { fetchList, fetchPv, createArticle, updateArticle } from '@/api/article'\n import waves from '@/directive/waves' // waves directive\n import { parseTime } from '@/utils'\n import Pagination from '@/components/Pagination' // secondary package based on el-pagination\n\n const calendarTypeOptions = [\n   { key: 'CN', display_name: '已完成' },\n   { key: 'US', display_name: '中断' },\n   { key: 'JP', display_name: '超时' },\n   { key: 'EU', display_name: '进行中' }\n ]\n\n // 关键字不修改是因为复用组件，找起来有点麻烦，先改大致的后来再改关键字\n const calendarTypeKeyValue = calendarTypeOptions.reduce((acc, cur) => {\n   acc[cur.key] = cur.display_name\n   return acc\n }, {})\n\n export default {\n   name: 'ComplexTable',\n   components: { Pagination },\n   directives: { waves },\n   filters: {\n     statusFilter(status) {\n       const statusMap = {\n         published: 'success',\n         draft: 'info',\n         deleted: 'danger'\n       }\n       return statusMap[status]\n     },\n     typeFilter(type) {\n       return calendarTypeKeyValue[type]\n     }\n   },\n   data() {\n     return {\n       tableKey: 0,\n       list: null,\n       total: 0,\n       listLoading: true,\n       listQuery: {\n         page: 1,\n         limit: 20,\n         importance: undefined,\n         title: undefined,\n         type: undefined,\n         sort: '+id'\n       },\n       importanceOptions: [1, 2, 3],\n       calendarTypeOptions,\n       sortOptions: [{ label: 'ID升序', key: '+id' }, { label: 'ID 降序', key: '-id' }],\n       statusOptions: ['待扫描', '已完成', '草稿'],\n       temp: {\n         id: undefined,\n         importance: 1,\n         remark: '',\n         timestamp: new Date(),\n         title: '',\n         type: '',\n         status: '草稿'\n       },\n       dialogFormVisible: false,\n       dialogStatus: '',\n       textMap: {\n         update: 'Edit',\n         create: 'Create'\n       },\n       dialogPvVisible: false,\n       pvData: [],\n       rules: {\n         type: [{ required: true, message: '请选择类型', trigger: 'change' }],\n         timestamp: [{ type: 'date', required: true, message: '请填写时间', trigger: 'change' }],\n         title: [{ required: true, message: '请输入标题', trigger: 'blur' }]\n       },\n       downloadLoading: false\n     }\n   },\n   created() {\n     this.getList()\n   },\n   methods: {\n     getList() {\n       this.listLoading = true\n       fetchList(this.listQuery).then(response => {\n         this.list = response.data.items\n         this.total = response.data.total\n\n         // Just to simulate the time of the request\n         setTimeout(() => {\n           this.listLoading = false\n         }, 1.5 * 1000)\n       })\n     },\n     handleFilter() {\n       this.listQuery.page = 1\n       this.getList()\n     },\n     handleModifyStatus(row, status) {\n       this.$message({\n         message: '操作成功',\n         type: 'success'\n       })\n       row.status = status\n     },\n     sortChange(data) {\n       const { prop, order } = data\n       if (prop === 'id') {\n         this.sortByID(order)\n       }\n     },\n     sortByID(order) {\n       if (order === 'ascending') {\n         this.listQuery.sort = '+id'\n       } else {\n         this.listQuery.sort = '-id'\n       }\n       this.handleFilter()\n     },\n     resetTemp() {\n       this.temp = {\n         id: undefined,\n         importance: 1,\n         remark: '',\n         timestamp: new Date(),\n         title: '',\n         status: '草稿',\n         type: ''\n       }\n     },\n     handleCreate() {\n       this.resetTemp()\n       this.dialogStatus = 'create'\n       this.dialogFormVisible = true\n       this.$nextTick(() => {\n         this.$refs['dataForm'].clearValidate()\n       })\n     },\n     createData() {\n       this.$refs['dataForm'].validate((valid) => {\n         if (valid) {\n           this.temp.id = parseInt(Math.random() * 100) + 1024 // mock a id\n           // this.temp.author = 'vue-element-admin'\n           createArticle(this.temp).then(() => {\n             this.list.unshift(this.temp)\n             this.dialogFormVisible = false\n             this.$notify({\n               title: 'Success',\n               message: '创建成功',\n               type: 'success',\n               duration: 2000\n             })\n           })\n         }\n       })\n     },\n     handleUpdate(row) {\n       this.temp = Object.assign({}, row) // copy obj\n       this.temp.timestamp = new Date(this.temp.timestamp)\n       this.dialogStatus = 'update'\n       this.dialogFormVisible = true\n       this.$nextTick(() => {\n         this.$refs['dataForm'].clearValidate()\n       })\n     },\n     updateData() {\n       this.$refs['dataForm'].validate((valid) => {\n         if (valid) {\n           const tempData = Object.assign({}, this.temp)\n           tempData.timestamp = +new Date(tempData.timestamp) \n           updateArticle(tempData).then(() => {\n             const index = this.list.findIndex(v => v.id === this.temp.id)\n             this.list.splice(index, 1, this.temp)\n             this.dialogFormVisible = false\n             this.$notify({\n               title: 'Success',\n               message: '更新成功',\n               type: 'success',\n               duration: 2000\n             })\n           })\n         }\n       })\n     },\n     handleDelete(row, index) {\n       this.$notify({\n         title: 'Success',\n         message: '删除成功',\n         type: 'success',\n         duration: 2000\n       })\n       this.list.splice(index, 1)\n     },\n     handleFetchPv(pv) {\n       fetchPv(pv).then(response => {\n         this.pvData = response.data.pvData\n         this.dialogPvVisible = true\n       })\n     },\n     handleDownload() {\n       this.downloadLoading = true\n       import('@/vendor/Export2Excel').then(excel => {\n         const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']\n         const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']\n         const data = this.formatJson(filterVal)\n         excel.export_json_to_excel({\n           header: tHeader,\n           data,\n           filename: 'table-list'\n         })\n         this.downloadLoading = false\n       })\n     },\n     formatJson(filterVal) {\n       return this.list.map(v => filterVal.map(j => {\n         if (j === 'timestamp') {\n           return parseTime(v[j])\n         } else {\n           return v[j]\n         }\n       }))\n     },\n     getSortClass: function(key) {\n       const sort = this.listQuery.sort\n       return sort === `+${key}` ? 'ascending' : 'descending'\n     }\n   }\n }\n </script>\n"]}]}