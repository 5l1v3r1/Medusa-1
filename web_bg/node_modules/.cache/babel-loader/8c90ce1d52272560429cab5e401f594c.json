{"remainingRequest":"/Users/zhujunyi/Downloads/Medusa/node_modules/babel-loader/lib/index.js!/Users/zhujunyi/Downloads/Medusa/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhujunyi/Downloads/Medusa/src/components/ImageCropper/utils/data2blob.js","dependencies":[{"path":"/Users/zhujunyi/Downloads/Medusa/src/components/ImageCropper/utils/data2blob.js","mtime":1584656670000},{"path":"/Users/zhujunyi/Downloads/Medusa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhujunyi/Downloads/Medusa/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhujunyi/Downloads/Medusa/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lczYudHlwZWQudWludDgtYXJyYXkiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnNwbGl0Iik7CgovKioKICogZGF0YWJhc2U2NOaWh+S7tuagvOW8j+i9rOaNouS4ujLov5vliLYKICoKICogQHBhcmFtICB7W1N0cmluZ119IGRhdGEgZGF0YVVSTCDnmoTmoLzlvI/kuLog4oCcZGF0YTppbWFnZS9wbmc7YmFzZTY0LCoqKirigJ0s6YCX5Y+35LmL5YmN6YO95piv5LiA5Lqb6K+05piO5oCn55qE5paH5a2X77yM5oiR5Lus5Y+q6ZyA6KaB6YCX5Y+35LmL5ZCO55qE5bCx6KGM5LqGCiAqIEBwYXJhbSAge1tTdHJpbmddfSBtaW1lIFtkZXNjcmlwdGlvbl0KICogQHJldHVybiB7W2Jsb2JdfSAgICAgIFtkZXNjcmlwdGlvbl0KICovCmZ1bmN0aW9uIF9kZWZhdWx0KGRhdGEsIG1pbWUpIHsKICBkYXRhID0gZGF0YS5zcGxpdCgnLCcpWzFdOwogIGRhdGEgPSB3aW5kb3cuYXRvYihkYXRhKTsKICB2YXIgaWEgPSBuZXcgVWludDhBcnJheShkYXRhLmxlbmd0aCk7CgogIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykgewogICAgaWFbaV0gPSBkYXRhLmNoYXJDb2RlQXQoaSk7CiAgfSAvLyBjYW52YXMudG9EYXRhVVJMIOi/lOWbnueahOm7mOiupOagvOW8j+WwseaYryBpbWFnZS9wbmcKCgogIHJldHVybiBuZXcgQmxvYihbaWFdLCB7CiAgICB0eXBlOiBtaW1lCiAgfSk7Cn0="},{"version":3,"sources":["/Users/zhujunyi/Downloads/Medusa/src/components/ImageCropper/utils/data2blob.js"],"names":["data","mime","split","window","atob","ia","Uint8Array","length","i","charCodeAt","Blob","type"],"mappings":";;;;;;;;;;;AAAA;;;;;;;AAOe,kBAASA,IAAT,EAAeC,IAAf,EAAqB;AAClCD,EAAAA,IAAI,GAAGA,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAP;AACAF,EAAAA,IAAI,GAAGG,MAAM,CAACC,IAAP,CAAYJ,IAAZ,CAAP;AACA,MAAIK,EAAE,GAAG,IAAIC,UAAJ,CAAeN,IAAI,CAACO,MAApB,CAAT;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACO,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AACpCH,IAAAA,EAAE,CAACG,CAAD,CAAF,GAAQR,IAAI,CAACS,UAAL,CAAgBD,CAAhB,CAAR;AACD,GANiC,CAOlC;;;AACA,SAAO,IAAIE,IAAJ,CAAS,CAACL,EAAD,CAAT,EAAe;AACpBM,IAAAA,IAAI,EAAEV;AADc,GAAf,CAAP;AAGD","sourcesContent":["/**\n * database64文件格式转换为2进制\n *\n * @param  {[String]} data dataURL 的格式为 “data:image/png;base64,****”,逗号之前都是一些说明性的文字，我们只需要逗号之后的就行了\n * @param  {[String]} mime [description]\n * @return {[blob]}      [description]\n */\nexport default function(data, mime) {\n  data = data.split(',')[1]\n  data = window.atob(data)\n  var ia = new Uint8Array(data.length)\n  for (var i = 0; i < data.length; i++) {\n    ia[i] = data.charCodeAt(i)\n  }\n  // canvas.toDataURL 返回的默认格式就是 image/png\n  return new Blob([ia], {\n    type: mime\n  })\n}\n"]}]}